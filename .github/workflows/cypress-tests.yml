name: Cypress Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  cypress_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # pega todo o histórico

      - name: Checkout Cypress-Auto repository
        uses: actions/checkout@v3
        with:
          repository: betogouvea/Cypress-Auto
          path: Cypress-Auto
          fetch-depth: 0  # pega todo o histórico

      - name: Instalação do Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Instalação das dependências
        run: |
          cd Cypress-Auto
          npm install

      - name: Criar script de seleção de testes
        run: |
          cd Cypress-Auto
          mkdir -p scripts
          cat << 'EOF' > scripts/select-tests.js
          const { execSync } = require("child_process");

          function getChangedFiles() {
            // Se for PR, usa branch base, senão usa origin/main
            const base = process.env.GITHUB_BASE_REF || "origin/main";
            const output = execSync(\`git diff --name-only \${base}\`).toString();
            return output.split("\\n").filter(Boolean);
          }

          function resolveTests(files) {
            const mapping = [
              { path: "cypress/e2e/coffee/", spec: "cypress/e2e/coffee/**/*.cy.ts" },
              { path: "cypress/e2e/saucedemo/", spec: "cypress/e2e/saucedemo/**/*.cy.ts" },
            ];

            const tests = new Set();

            files.forEach(file => {
              mapping.forEach(entry => {
                if (file.startsWith(entry.path)) {
                  tests.add(entry.spec);
                }
              });
            });

            return [...tests];
          }

          const changedFiles = getChangedFiles();
          const testsToRun = resolveTests(changedFiles);

          if (testsToRun.length === 0) {
            console.log("cypress/e2e/**/*.cy.ts"); // fallback: roda todos
          } else {
            console.log(testsToRun.join(","));
          }
          EOF

      - name: Selecionar testes impactados
        run: |
          cd Cypress-Auto
          node scripts/select-tests.js > impacted-tests.txt
          echo "Testes selecionados:"
          cat impacted-tests.txt

      - name: Rodar Testes do Cypress
        run: |
          cd Cypress-Auto
          TESTS=$(cat impacted-tests.txt)
          echo "Rodando testes: $TESTS"
          npx cypress run --spec "$TESTS"

      - name: Salvar vídeos do Cypress
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-videos
          path: Cypress-Auto/cypress/videos

  notifications:
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Envio de notificação de sucesso
        if: success()
        run: echo "✅ Todos os testes passaram!" >> $GITHUB_STEP_SUMMARY

      - name: Envio de notificação de falha
        if: failure()
        run: echo "❌ Algum teste falhou! Verifique os relatórios." >> $GITHUB_STEP_SUMMARY
